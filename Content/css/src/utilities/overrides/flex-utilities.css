/**
 * Use Flexbox to vertically center align things
 */

/* stylelint-disable declaration-no-important */

.u-flex-vertical-center
{
    display: flex;
    align-items: center;
}

@media only screen and (max-width: 30em)
{
    .u-flex-vertical-center--phone-portrait-only
    {
        display: flex;
        align-items: center;
    }
}

@media only screen and (min-width: 30em)
{
    .u-flex-vertical-center--phone-landscape-up
    {
        display: flex;
        align-items: center;
    }
}

@media only screen and (min-width: 30em) and (max-width: 39.999375em)
{
    .u-flex-vertical-center--phone-landscape-only
    {
        display: flex;
        align-items: center;
    }
}

@media only screen and (min-width: 40em)
{
    .u-flex-vertical-center--tablet-portrait-up
    {
        display: flex;
        align-items: center;
    }
}

@media only screen and (min-width: 40em) and (max-width: 63.999375em)
{
    .u-flex-vertical-center--tablet-portrait-only
    {
        display: flex;
        align-items: center;
    }
}

@media only screen and (min-width: 64em)
{
    .u-flex-vertical-center--tablet-landscape-up
    {
        display: flex;
        align-items: center;
    }
}

@media only screen and (min-width: 64em) and (max-width: 79.999375em)
{
    .u-flex-vertical-center--tablet-landscape-only
    {
        display: flex;
        align-items: center;
    }
}

@media only screen and (min-width: 80em)
{
    .u-flex-vertical-center--desktop-up
    {
        display: flex;
        align-items: center;
    }
}

.u-flex-stretch
{
    display: flex;
    align-items: stretch;
}

@media only screen and (max-width: 30em)
{
    .u-flex-stretch--phone-portrait-only
    {
        display: flex;
        align-items: stretch;
    }
}

@media only screen and (min-width: 30em)
{
    .u-flex-stretch--phone-landscape-up
    {
        display: flex;
        align-items: stretch;
    }
}

@media only screen and (min-width: 30em) and (max-width: 39.999375em)
{
    .u-flex-stretch--phone-landscape-only
    {
        display: flex;
        align-items: stretch;
    }
}

@media only screen and (min-width: 40em)
{
    .u-flex-stretch--tablet-portrait-up
    {
        display: flex;
        align-items: stretch;
    }
}

@media only screen and (min-width: 40em) and (max-width: 63.999375em)
{
    .u-flex-stretch--tablet-portrait-only
    {
        display: flex;
        align-items: stretch;
    }
}

@media only screen and (min-width: 64em)
{
    .u-flex-stretch--tablet-landscape-up
    {
        display: flex;
        align-items: stretch;
    }
}

@media only screen and (min-width: 64em) and (max-width: 79.999375em)
{
    .u-flex-stretch--tablet-landscape-only
    {
        display: flex;
        align-items: stretch;
    }
}

@media only screen and (min-width: 80em)
{
    .u-flex-stretch--desktop-up
    {
        display: flex;
        align-items: stretch;
    }
}

/**
 * Adjustments for flex-wrap
 */

.u-flex-wrap--nowrap
{
    flex-wrap: nowrap;
}

.u-flex-wrap--wrap
{
    flex-wrap: wrap;
}

.u-flex-wrap--wrap-reverse
{
    flex-wrap: wrap-reverse;
}


/**
 * Defines the ability for a flex item to grow if necessary.
 */

.u-flex-grow--1
{
    flex-grow: 1;
}


/**
 * Defines the ability for a flex item to shrink if necessary.
 */

.u-flex-shrink--0
{
    flex-shrink: 0;
}


/**
 * Support: Truncated Text with Flexbox / Flexbox child expanding wider than it's flexbox container
 * Details: According to the spec - Flex elements have an automatic minimum size of the content width
 *          to prevent overflows - which of course does not play nice when truncating text.
 * Supporting Details: https://bugzilla.mozilla.org/show_bug.cgi?id=1108514#c5
 * Supporting Details: https://www.w3.org/TR/css-flexbox-1/#min-size-auto
 * Fix: Add `min-width:0;` in the flex-child containing the other text elements.
 */

.u-flex-min-width-truncate-fix
{
    min-width: 0;
}


/**
 * Reverse the flex direction
 */

.u-flex-row--reverse
{
    display: flex !important;
    flex-direction: row-reverse !important;
}


/**
 * Defines the default size of an element before the remaining space is distributed.
 */

.u-flex-basis--0
{
    flex-basis: 0;
}

/**
 * Support: IE11 - Flexbox Basis
 * Details: Long content does not wrap correctly in IE11. - While other browsers render `flex-basis:auto` correctly, IE11 wants an explicit request.
 * Supporting Details: https://stackoverflow.com/a/35113633
 * Additional Details: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-basis
 * Workaround: Setting `flex-basis: 100%` will make the container use 100% of it's container.
 * Warning: When a non-auto flex-basis is specified, in IE10 & IE11 it will use a `content-box` box modal to calculate the size of a flex item even if
 *  `box-sizing: border-box` is applied to the element - which can cause issues so this should not be applied globally.  The related details link shows
 * the issue in IE11 and the flexbugs github repo shows possible workarounds for this issue.
 * Related Details: https://codepen.io/philipwalton/pen/JoWjyb (viewed in IE11)
 * Additional Details: https://github.com/philipwalton/flexbugs#flexbug-7
 *
 */

.u-flex-basis--100
{
    flex-basis: 100%;
}

/**
 * Alignment along the main axis within Flexible Box Layout - Dependency on `display:flex`.
 */

.u-flex-justify-content
{
    justify-content: flex-start;
}

.u-flex-justify-content--flex-end
{
    justify-content: flex-end;
}

.u-flex-justify-content--center
{
    justify-content: center;
}

.u-flex-justify-content--space-between
{
    justify-content: space-between;
}

.u-flex-justify-content--space-around
{
    justify-content: space-around;
}
